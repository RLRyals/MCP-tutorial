services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ${POSTGRES_CONTAINER_NAME} 
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./scripts:/scripts
    ports:
      - "5432:5432"
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # MCP Server (commented out until implemented in later tutorial steps)
  # mcp-server:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: mcp-series-server
  #   restart: unless-stopped
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     NODE_ENV: ${NODE_ENV}
  #     DATABASE_URL: ${DATABASE_URL}
  #     MCP_PORT: ${MCP_SERVER_PORT}
  #   ports:
  #     - "${MCP_SERVER_PORT}:${MCP_SERVER_PORT}"
  #   volumes:
  #     - ./src:/app/src
  #     - ./migrations:/app/migrations
  #     - /app/node_modules
  #   networks:
  #     - mcp-network
  #   command: npm start

networks:
  mcp-network:
    name: mcp-series-network

volumes:
  postgres_data:
    name: mcp-series-data
