# Temporary Setup Instructions for Tutorial Repository

This guide provides steps for setting up the tutorial version of the book-series-mcp repository. The tutorial will be structured in branches, with each branch adding new functionality to demonstrate how to build an MCP server system step by step.

## 1. Initial Repository Setup
1. Go to your Git hosting platform (e.g., GitHub, GitLab, Bitbucket).
2. Click on **New Repository**.
3. Fill in the repository details:
   - **Repository Name**: Choose a descriptive name (e.g., `mcp-tutorial`).
   - **Description**: Add a brief description of the repository's purpose.
   - **Visibility**: Choose between public or private.
4. Initialize the repository with:
   - A `README.md` file.
   - A `.gitignore` file (select the appropriate template, e.g., Node.js or Python).
   - A license (e.g., MIT License).

## 2. Clone the Repository
1. Copy the repository's HTTPS or SSH URL.
2. Open a terminal and run:
   ```bash
   git clone <repository-url>
   ```
3. Navigate to the cloned repository:
   ```bash
   cd <repository-name>
   ```

## 3. Set Up the Repository Structure
Create the following directory structure for the tutorial:

```
mcp-tutorial/
├── [README.md](http://_vscodecontentref_/0)
├── LICENSE
├── docs/
│   ├── setup-guide.md
│   ├── tutorial-steps.md
│   └── database-schema.md
├── migrations/
│   ├── 20250901_initial_setup.sql
│   └── ...
├── src/
│   ├── index.js
│   ├── controllers/
│   ├── routes/
│   └── ...
├── tests/
│   ├── example-test.js
│   └── ...
├── [docker-compose.yml](http://_vscodecontentref_/1)
├── Dockerfile
└── [package.json](http://_vscodecontentref_/2)
```
4. Add Core Files
README.md: Provide an overview of the tutorial, including its purpose and how to get started.
LICENSE: Include the license file (e.g., MIT License).
docs/: Add documentation files for setup, tutorial steps, and database schema.
migrations/: Include SQL migration scripts for setting up the database.
src/: Add the source code for the tutorial.
tests/: Add test files to validate the tutorial's functionality.
docker-compose.yml: Define services for the tutorial (e.g., database, application).
Dockerfile: Create a Dockerfile for containerizing the application.
package.json: Initialize the project with npm init and add dependencies.

## 5. Initialize the Project

## 1. Install Dependencies
Run the following command to install the necessary dependencies:
```bash
npm install
```

Set up the database:
1. Copy `template.env` to `.env` and configure your database settings.
2. Use the provided Docker tools to set up the database:
   ```powershell
   ./db-docker-tools.ps1 -start
   ```
3. Run the migration scripts in the migrations/ folder to initialize the database:
   ```powershell
   ./run-migration.ps1
   ```

6. Create Tutorial Branches
1. Create branches for each tutorial step:
   ```bash
   git checkout -b 01-basic-setup
   git checkout -b 02-character-server
   git checkout -b 03-world-server
   git checkout -b 04-plot-server
   git checkout -b 05-writing-server
   git checkout -b 06-research-server
   ```
2. Switch back to the basic setup branch:
   ```bash
   git checkout 01-basic-setup
   ```
7. Write Documentation
Setup Guide: Provide detailed instructions for setting up the tutorial environment.
Tutorial Steps: Break down the tutorial into clear, incremental steps.
Database Schema: Document the database schema and its purpose.
8. Add Version Control
1. Stage all files:
   ```bash
   git add .
   ```
2. Commit the changes:
   ```bash
   git commit -m "Initial project setup"
   ```
3. Push to the remote repository:
   ```bash
   git push origin main
   ```
8. Test the Tutorial
Run the application locally to ensure everything works as expected.
Execute test cases in the tests/ folder.
9. Share the Repository
Add collaborators if needed.
Share the repository link with users.
10. Maintain the Repository
Update documentation as the tutorial evolves.
Fix bugs and address user feedback.
Add new features or steps as needed.

By following these steps, you will have a well-structured and functional tutorial repository for the MCP Writing System.